---
import { getPostPath, type Post, postImageHash } from '~/lib/posts';

import FormattedDate from './FormattedDate.astro';
import Image from './Image.astro';

type Props = {
	class?: string;
	header: 'h2' | 'h3';
	lazy?: boolean;
} & Post;
const { class: className, header: Header, lazy = true, ...post } = Astro.props;

const hash = await postImageHash(post);
const { coverAlt = '', coverImage, date, title } = post.data;
const id = `post-${post.id}`;
---

<script src="~/scripts/images.ts"></script>
<a
	class={className}
	href={getPostPath(post)}
	itemprop="blogPost"
	itemscope
	itemtype="http://schema.org/BlogPosting"
>
	{
		coverImage ? (
			<Image
				alt={coverAlt}
				class="h-80 w-full"
				hash={hash}
				loading={lazy ? 'lazy' : 'eager'}
				sizes={`(max-width: 767px) 700px, (max-width: 1023px) 450px, 320px, ${coverImage.width}px`}
				src={coverImage}
				widths={[320, 450, 700, coverImage.width]}
				wrapperClass="rounded-md overflow-hidden"
			/>
		) : (
			<div class="w-full h-80 rounded-md image-filter" data-hash={hash} />
		)
	}
	<Header
		aria-label={title}
		class="font-thin text-3xl my-4"
		id={id}
		itemprop="headline"
	>
		{title}
	</Header>
	<p>
		<FormattedDate date={date} />
	</p>
</a>
